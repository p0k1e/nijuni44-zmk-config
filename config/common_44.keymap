/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define lower_layer LWR
#define RSE 2
#define raise_layer RSE
#define ADJ 3
#define adjust_layer ADJ
#define GME 4
#define GLR 5

&lt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
};

&mt {
    quick-tap-ms = <175>;
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        ESCape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        BSP {
            bindings = <&kp BACKSPACE>;
            key-positions = <11 12>;
        };

        adj+copy {
            bindings = <&lt 3 LC(C)>;
            key-positions = <5 6>;
        };

        adj+paste {
            bindings = <&lt 3 LC(V)>;
            key-positions = <7 8>;
        };
    };

    macros {
        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "LANG";
        };
    };

    behaviors {
        LT2Lang: LT2Lang {
            compatible = "zmk,behavior-hold-tap";
            label = "LT2LANG";
            bindings = <&lt>, <&lang>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <38>;
        };

        lt2esclang: lt2esclang {
            compatible = "zmk,behavior-tap-dance";
            label = "LT2ESCLANG";
            #binding-cells = <0>;
            bindings = <&lt 2 ESCAPE>, <&lang>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp ESCAPE  &kp TAB       &kp Q  &kp W  &kp E      &kp R         &kp T                   &kp Y                  &kp U        &kp I         &kp O    &kp P          &kp BACKSPACE  &kp TAB
            &kp ESCAPE    &kp A  &kp S  &kp D      &kp F         &kp G                   &kp H                  &kp J        &kp K         &kp L    &kp SEMICOLON  &kp ENTER
            &kp LEFT_ALT  &kp Z  &kp X  &kp C      &kp V         &kp B                   &kp N                  &kp M        &kp COMMA     &kp DOT  &kp FSLH       &kp BSLH
                                        &kp LCTRL  &kp LEFT_WIN  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT SPACE  &lt 1 SPACE  &lt 2 DELETE
            >;
        };

        lower_layer {
            label = "Numbers";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3          &kp N4                 &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans  &trans
        &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT         &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans        &trans
        &trans  &trans            &trans             &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE       &kp HOME      &kp MINUS     &kp EQUAL     &kp END       &trans        &trans
                                                     &trans                &trans                 &trans          &trans        &trans        &trans
            >;
        };

        raise_layer {
            label = "Media";

            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH           &kp DOLLAR   &kp PERCENT        &kp CARET  &kp AMPERSAND   &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans   &kp F12
        &trans  &kp F1           &kp F2       &kp F3             &kp F4       &kp F5             &kp F6     &kp F7          &kp F8            &kp F9                &kp F10                &kp F11
        &trans  &kp K_UNDO       &kp K_CUT    &kp K_COPY         &kp K_PASTE  &trans             &trans     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT            &kp C_STOP             &trans
                                              &kp C_VOLUME_DOWN  &kp C_MUTE   &kp C_VOLUME_UP    &trans     &trans          &trans
            >;
        };

        adjust_layer {
            label = "ADJ";

            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader   &none         &none              &none         &none         &none           &none         &none         &none         &none              &none         &bootloader   &sys_reset
            &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &bt BT_CLR
            &out OUT_TOG  &tog GME      &ext_power EP_TOG  &none         &none         &none           &none         &none         &none         &ext_power EP_TOG  &tog GME      &out OUT_TOG
                                                           &trans        &none         &trans          &trans        &none         &trans
            >;
        };

        gaming_layer {
            label = "GAME";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp TAB  &kp RET    &kp Q  &kp W  &kp E      &kp R      &kp T      &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC       &mt RWIN RBKT
         &kp LCTRL  &kp A  &kp S  &kp D      &kp F      &kp G      &kp H    &kp J      &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
         &kp LALT   &kp Z  &kp X  &kp C      &kp V      &kp B      &kp N    &kp M      &kp COMMA  &kp DOT  &tog GME  &mt RALT BSLH
                                  &kp SPACE  &kp LSHFT  &mo GLR    &kp ESC  &kp RSHFT  &kp DEL
            >;
        };

        gaming_lower_layer {
            label = "GNUM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE       &kp F8  &kp F9  &kp F10  &kp F4  &kp F5    &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp N6  &kp N7  &kp N8   &kp N9  &kp N0    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1  &kp N2  &kp N3   &kp N4  &kp N5    &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &trans
                                        &trans   &trans  &trans    &trans     &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
